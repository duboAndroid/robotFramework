*** Settings ***
Resource          0-商户管理后台-UI.txt

*** Variables ***
${table_商品}       xpath=//*[@id='goods-table']
${table_商品分类}     xpath=//*[@id="cate-table"]

*** Keywords ***
点击微信商城
    通用-web.长等待点击元素    xpath=//div[@id="page-wrapper"]/ul/li[3]/a/span[1]    #点击微信商城

点击商品管理
    通用-web.长等待点击元素    xpath=//div[@id="page-wrapper"]/ul/li[3]/ul/li[1]/a

点击商城统计
    通用-web.长等待点击元素    //*[@id="page-wrapper"]/ul/li[3]/ul/li[4]/a

点击新建商品
    通用-web.长等待点击元素    xpath=//form[@id="query_form"]/div/div[2]/div[2]/a

点击仓库中的商品
    通用-web.长等待点击元素    xpath=//*[@id="body-content"]/ul/li[2]/a

点击商品分类页
    通用-web.长等待点击元素    xpath=//*[@id="body-content"]/ul/li[3]/a

创建页_选择商品类目
    通用-web.长等待点击元素    xpath=//select[@name="firstCatagory"]/option[1]    #点击第一个类目请选择按钮
    通用-web.长等待点击元素    xpath=//select[@name="firstCatagory"]/option[2]    #选择第一种类目
    sleep    1s
    通用-web.长等待点击元素    xpath=//select[@name="mallGoodsCatagoryId"]/option[1]    #点击第二个类目请选择按钮
    通用-web.长等待点击元素    xpath=//select[@name="mallGoodsCatagoryId"]/option[2]    #选择第二种类目

创建页_选择商品分类
    通用-web.长等待点击元素    xpath=//select[@name="cateId"]/option[1]    #点击商品分类请选择按钮
    通用-web.长等待点击元素    xpath=//select[@name="cateId"]/option[3]    #选择第二个分类

创建页_输入商品名称
    [Arguments]    ${Goods_name}
    通用-web.长等待输入文本    xpath=//input[@name='name']    ${Goods_name}

创建页_输入商品自编号
    [Arguments]    ${Goods_serial}
    通用-web.长等待输入文本    xpath=//input[@name='privateSerial']    ${Goods_serial}

创建页_输入商品简介
    [Arguments]    ${Goods_description}
    通用-web.长等待输入文本    xpath=//textarea[@name='description']    ${Goods_description}

创建页_输入单规格价格
    [Arguments]    ${Goods_price}
    通用-web.长等待输入文本    xpath=//input[@name='transientPrice']    ${Goods_price}

创建页_输入单规格库存
    [Arguments]    ${Goods_quantity}
    通用-web.长等待输入文本    xpath=//input[@name='skuQuantity']    ${Goods_quantity}

创建页_选择多种规格
    [Arguments]    ${多规格}    ${一级主规格名称}    ${一级子规格名称}    ${二级主规格名称}=    ${二级子规格名称}=    ${三级主规格名称}=
    ...    ${三级子规格名称}=
    [Documentation]    ${多规格}=1 \ \ \ \ 即为添加一级规格
    ...
    ...    ${多规格}=2 \ \ \ \ 即为添加二级规格
    ...
    ...    ${多规格}=3 \ \ \ \ 即为添加三级规格
    #sleep    #2s
    通用-web.长等待点击元素    xpath=//*[@id="multi-standard"]
    Run Keyword If    '${多规格}'=='一级规格'    创建页_添加一级规格    ${一级主规格名称}    ${一级子规格名称}
    Run Keyword If    '${多规格}'=='二级规格'    创建页_添加二级规格    ${一级主规格名称}    ${一级子规格名称}    ${二级主规格名称}    ${二级子规格名称}
    Run Keyword If    '${多规格}'=='三级规格'    创建页_添加三级规格    ${一级主规格名称}    ${一级子规格名称}    ${二级主规格名称}    ${二级子规格名称}
    ...    ${三级主规格名称}    ${三级子规格名称}
    通用-web.长等待点击元素    xpath=//*[@id="goods-form"]/div[8]/div[2]/div/span[2]    #保存规格
    创建页_批量输入价格和库存

创建页_点击添加规格
    通用-web.长等待点击元素    xpath=//*[@id="goods-form"]/div[8]/div[2]/div/span[1]

创建页_上传规格图片
    [Arguments]    ${规格图片}
    [Documentation]    ${规格图片} \ 为规格图片名称
    通用-web.长等待元素显示    xpath=//*[@id="btn_wrap_1"]
    ${path}    Normalize Path    ${G_Tools路径}\\门店应用\\${规格图片}
    Choose File    xpath=//*[@id="btn_wrap_1"]/span/div[2]/input    ${path}
    通用-web.长等待点击元素    xpath=//*[@id="warn-popup"]/div[2]/div[1]/i

创建页_添加一级规格
    [Arguments]    ${一级主规格名称}    ${一级子规格名称}    ${上传规格图片}=
    通用-web.长等待输入文本    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[1]/div[1]/input    ${一级主规格名称}    #输入一级主规格名称
    通用-web.长等待点击元素    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[1]/div[2]/div    #点击添加一级子规格
    通用-web.长等待输入文本    //*[@id="goods-form"]/div[8]/div[1]/div/div/div[1]/div[2]/div[1]/div[1]/input    ${一级子规格名称}    #输入一级子规格名称
    Run Keyword If    '${上传规格图片}'==''    创建页_上传规格图片    商品规格图片.jpg

创建页_添加二级规格
    [Arguments]    ${一级主规格名称}    ${一级子规格名称}    ${二级主规格名称}    ${二级子规格名称}
    创建页_添加一级规格    ${一级主规格名称}    ${一级子规格名称}
    创建页_点击添加规格
    通用-web.长等待输入文本    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[2]/div[1]/input    ${二级主规格名称}    #输入二级主规格名称
    通用-web.长等待点击元素    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[2]/div[2]/div    #点击添加二级子规格
    通用-web.长等待输入文本    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[2]/div[2]/div[1]/input    ${二级子规格名称}    #输入二级子规格名称

创建页_添加三级规格
    [Arguments]    ${一级主规格名称}    ${一级子规格名称}    ${二级主规格名称}    ${二级子规格名称}    ${三级主规格名称}    ${三级子规格名称}
    创建页_添加二级规格    ${一级主规格名称}    ${一级子规格名称}    ${二级主规格名称}    ${二级子规格名称}
    创建页_点击添加规格
    通用-web.长等待输入文本    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[3]/div[1]/input    ${三级主规格名称}    #输入三级主规格名称
    通用-web.长等待点击元素    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[3]/div[2]/div    #点击添加三级子规格
    通用-web.长等待输入文本    xpath=//*[@id="goods-form"]/div[8]/div[1]/div/div/div[3]/div[2]/div[1]/input    ${三级子规格名称}    #输入三级子规格名称

创建页_点击保存规格
    通用-web.长等待点击元素    xpath=//*[@id='goods-form']/div[8]/div[2]/div/span[2]

创建页_批量输入价格和库存
    通用-web.长等待输入文本    xpath=//*[@id='batchPrice']    1
    通用-web.长等待输入文本    xpath=//*[@id='batchAmount']    9999
    通用-web.长等待点击元素    xpath=//*[@id='goods-form']/div[8]/div[3]/div/span[1]

创建页_选择门店??

创建页_上传商品图片
    [Arguments]    ${商品封面图片}
    通用-web.长等待元素显示    xpath=//*[@id='goodsPicUpload']
    ${path}    Normalize Path    ${G_Tools路径}\\门店应用\\${商品封面图片}
    Choose File    xpath=//*[@id='goodsPicUpload']/div[2]/input    ${path}
    Comment    ${status}    Run Keyword And Return Status    通用-web.长等待元素显示    xpath=//*[@id="warn-popup"]/div[2]/div[1]/i
    Comment    Run Keyword If    '${status}'=='True'    通用-web.长等待点击元素    xpath=//*[@id="warn-popup"]/div[2]/div[1]/i    #弹窗自动关闭
    通用-web.长等待点击元素    xpath=//*[@id="warn-popup"]/div[2]/div[1]/i

创建页_输入商品详情
    [Arguments]    ${Goods_detail}
    Wait Until Keyword Succeeds    ${G_等待超时时间}    1s    Execute Javascript    document.getElementById('ueditor_0').contentWindow.document.getElementsByTagName('p')[0].innerText="${Goods_detail}";

创建页_点击发布
    通用-web.长等待点击按钮    xpath=//button[@id='sub']

创建页_点击保存草稿
    通用-web.长等待点击按钮    xpath=//button[@onclick='submitDraftForm()']

创建页_点击取消
    通用-web.长等待点击元素    xpath=//button[@onclick='closeForm()']

通过名称获取商品信息
    [Arguments]    ${商品名称}    ${单价}    ${库存}
    表格.翻页查找数据    ${table_商品}    ${商品名称}    2    类型二
    ${ret_单价}    表格.通过已知列数据查找其他列数据    ${table_商品}    ${商品名称}    2    3
    Should Be Equal    ${单价}    ${ret_单价}
    ${ret_库存}    表格.通过已知列数据查找其他列数据    ${table_商品}    ${商品名称}    2    4
    Should Be Equal    ${库存}    ${ret_库存}
    ${ret_总销量}    表格.通过已知列数据查找其他列数据    ${table_商品}    ${商品名称}    2    5
    Should Be Equal    0    ${ret_总销量}

创建新商品
    [Arguments]    ${输入自编号}=    ${规格}=    ${创建操作}=发布    ${当前页面}=
    [Documentation]    ${输入自编号}
    ...    默认为空，输入自编号
    ...    不为空，不输入自编号
    ...
    ...    ${规格}
    ...    默认为单规格
    ...    ${规格}=一级规格
    ...    ${规格}=二级规格
    ...    ${规格}=三级规格
    ...
    ...    ${创建操作}
    ...    发布
    ...    保存草稿
    ...
    ...    ${当前页面}=
    ...    默认空为出售中商品页创建商品
    ...    不为空则仓库中商品页创建商品
    ${random}    Generate Random String    5    [NUMBERS]
    ${商品名称}    Set Variable    ${G_商品名称前缀}${random}
    ${商品编号}    Set Variable    ${G_商品自编号前缀}${random}
    商户管理后台-主菜单.点击门店应用
    门店应用-微信商城-商品管理-UI.点击微信商城
    门店应用-微信商城-商品管理-UI.点击商品管理
    Run Keyword If    '${当前页面}'!=''    点击仓库中的商品
    点击新建商品
    创建页_选择商品类目
    创建页_选择商品分类
    创建页_输入商品名称    ${商品名称}
    Run Keyword If    '${输入自编号}'==''    创建页_输入商品自编号    ${商品编号}
    创建页_输入商品简介    这个是商品简介哦~
    Run Keyword If    '${规格}'==''    创建页_输入单规格价格    10
    Run Keyword If    '${规格}'==''    创建页_输入单规格库存    10000
    Run Keyword If    '${规格}'=='一级规格'    创建页_选择多种规格    一级规格    一级主规格哈~    一级子规格哈哈~
    Run Keyword If    '${规格}'=='二级规格'    创建页_选择多种规格    二级规格    一级主规格哈~    一级子规格哈哈~    二级主规格哈~
    ...    二级子规格哈哈~
    Run Keyword If    '${规格}'=='三级规格'    创建页_选择多种规格    三级规格    一级主规格哈~    一级子规格哈哈~    二级主规格哈~
    ...    二级子规格哈哈~    三级主规格哈~    三级子规格哈哈~
    创建页_上传商品图片    商品封面图.jpg
    创建页_输入商品详情    这是商品详情哈哈哈哈O(∩_∩)O哈哈~
    Run Keyword If    '${创建操作}'=='发布'    创建页_点击发布
    Run Keyword If    '${创建操作}'=='保存草稿'    创建页_点击保存草稿
    sleep    3s    $创建商品较慢
    Selenium2Library.Capture Page Screenshot
    : FOR    ${k}    IN RANGE    20
    \    ${status1}    Run Keyword And Return Status    Selenium2Library.Page Should Contain Element    xpath=//*[text()='${商品名称}']
    \    ${status2}    Run Keyword And Return Status    Selenium2Library.Page Should Contain Element    xpath=//*[text()='出售中的商品']
    \    ${status}    Evaluate    ${status1}&${status2}
    \    Exit For Loop If    '${status}'=='True'
    \    Run Keyword If    '${创建操作}'=='发布'    门店应用-微信商城-商品管理-UI.点击商品管理    #在出售中商品页刷新页面
    \    Run Keyword If    '${创建操作}'=='保存草稿'    Run Keywords    门店应用-微信商城-商品管理-UI.点击商品管理    门店应用-微信商城-商品管理-UI.点击仓库中的商品    #在仓库中商品页刷新页面
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Run Keyword If    '${status}'=='False'    Selenium2Library.Capture Page Screenshot
    Should Be Equal    '${status}'    'True'
    #若商品在第二页，运行失败
    [Return]    ${商品名称}    ${商品编号}

编辑商品
    [Arguments]    ${商品名称}    ${操作}=发布
    [Documentation]    ${操作}
    ...    1、发布
    ...    2、保存草稿
    表格.长等待表格显示    ${table_商品}
    #翻页查找数据
    ${row_table}    表格.翻页查找数据    ${table_商品}    ${商品名称}    2
    ${row_tbody}    Evaluate    int(${row_table})-1    #返回的row从标题行开始算，而xpath要从数据行，所以要减一
    #sleep    #2s
    通用-web.长等待点击元素    ${table_商品}/tbody/tr[${row_tbody}]/td[6]/span[1]/a    #点击编辑按钮
    创建页_输入单规格价格    20
    创建页_输入单规格库存    20000
    Run Keyword If    '${操作}'=='发布'    创建页_点击发布
    Run Keyword If    '${操作}'=='保存草稿'    创建页_点击保存草稿
    : FOR    ${k}    IN RANGE    20
    \    ${status1}    Run Keyword And Return Status    Page Should Contain    ${商品名称}
    \    ${status2}    Run Keyword And Return Status    Page Should Contain    出售中的商品
    \    ${status}    Evaluate    ${status1}&${status2}
    \    Exit For Loop If    '${status}'=='True'
    \    Run Keyword If    '${操作}'=='发布'    门店应用-微信商城-商品管理-UI .点击商品管理    #在出售中商品页刷新页面
    \    Run Keyword If    '${操作}'=='保存草稿'    门店应用-微信商城-商品管理-UI .点击仓库中的商品    #在仓库中商品页刷新页面
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    [Return]    ${row_tbody}

下架或上架商品
    [Arguments]    ${商品名称}    ${操作}
    [Documentation]    进入出售中商品页，则为下架商品，进入仓库中商品页，则为上架商品
    Run Keyword If    '${操作}'=='下架'    门店应用-微信商城-商品管理-UI.点击商品管理    #下架操作，在出售中商品页刷新页面
    Run Keyword If    '${操作}'=='上架'    门店应用-微信商城-商品管理-UI.点击仓库中的商品    #上架操作，在仓库中商品页刷新页面
    #翻页查找数据
    ${row_table}    表格.翻页查找数据    ${table_商品}    ${商品名称}    2
    ${row_tbody}    Evaluate    int(${row_table})-1    #返回的row从标题行开始算，而xpath要从数据行，所以要减一
    通用-web.长等待点击元素    ${table_商品}/tbody/tr[${row_tbody}]/td[6]/span[2]
    通用-web.长等待点击元素    //*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    #判断商品从当前页面消失
    : FOR    ${k}    IN RANGE    1    10
    \    ${status}    Run Keyword And Return Status    Page Should Not Contain    ${商品名称}
    \    Exit For Loop If    '${status}'=='True'
    \    Run Keyword If    '${操作}'=='下架'    门店应用-微信商城-商品管理-UI.点击商品管理    #下架操作，在出售中商品页刷新页面
    \    Run Keyword If    '${操作}'=='上架'    门店应用-微信商城-商品管理-UI.点击仓库中的商品    #上架操作，在仓库中商品页刷新页面
    \    ${k}    Set Variable    ${k}+1
    [Return]    ${row_tbody}

删除商品
    [Arguments]    ${商品名称}
    #翻页查找数据
    ${row_table}    表格.翻页查找数据    ${table_商品}    ${商品名称}    2
    ${row_tbody}    Evaluate    int(${row_table})-1
    通用-web.长等待点击元素    ${table_商品}/tbody/tr[${row_tbody}]/td[6]/span[3]    #点击删除
    通用-web.长等待点击元素    //*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    Wait Until Keyword Succeeds    ${G_等待超时时间}    1s    Selenium2Library.Page Should Not Contain Element    xpath=//*[text()='${商品名称}']
    [Return]    ${row_tbody}

商品导出
    [Arguments]    ${商品名称}
    表格.长等待表格显示    ${table_商品}
    ${row_table}    表格.翻页查找数据    ${table_商品}    ${商品名称}    2
    ${row_tbody}    Evaluate    int(${row_table}-1)
    通用-web.长等待点击元素    ${table_商品}/tbody/tr[${row_tbody}]/td[6]/span[4]    #点击导出
    通用-web.长等待点击元素    xpath=//*[@id="QRCode-url"]    #点击导出分享二维码
    通用-web.长等待点击元素    ${table_商品}/tbody/tr[${row_tbody}]/td[6]/span[4]    #点击导出    #暂未判断是否导出成功
    通用-web.长等待点击元素    xpath=//*[@id="copyLink-url"]    #点击复制商品链接    #暂未判断是否复制成功
    [Return]    ${row_tbody}

出售中查询商品
    [Arguments]    ${商品名称}
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${商品名称}    #输入商品名称
    通用-web.长等待点击元素    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall_goods mg, mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(1) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${商品名称}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'

出售中名称和编号查询商品
    [Arguments]    ${商品名称}    ${商品编号}
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${商品名称}    #输入商品名称
    通用-web.长等待输入文本    xpath=//*[@id="goodsNo-search"]    ${商品编号}    #输入商品编号
    通用-web.长等待点击元素    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall.mall_goods mg, mall.mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(1) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${商品名称}%' AND private_serial LIKE '${商品编号}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'

仓库中名称和编号查询商品
    [Arguments]    ${商品名称}    ${商品编号}
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${商品名称}    #输入商品名称
    通用-web.长等待输入文本    xpath=//*[@id="goodsNo-search"]    ${商品编号}    #输入商品编号
    通用-web.长等待点击元素    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall.mall_goods mg, mall.mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(2,3) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${商品名称}%' AND private_serial LIKE '${商品编号}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'

仓库中查询商品
    [Arguments]    ${商品名称}    ${商品编号}=
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${商品名称}    #输入商品名称
    通用-web.长等待点击元素    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    Run Keyword If    '${商品编号}'==''    数据库.查询sql    SELECT COUNT(mg.id) FROM mall_goods mg, mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(2,3) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '自动创建商品%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'

新建商品分类
    ${random}    Generate Random String    4    [NUMBERS]
    ${商品分类}    Set Variable    ${G_商品分类前缀}${random}
    商户管理后台-主菜单.点击门店应用
    门店应用-微信商城-商品管理-UI.点击微信商城
    门店应用-微信商城-商品管理-UI.点击商品管理
    点击商品分类页
    通用-web.长等待点击元素    xpath=//*[@id="add-btn"]    #点击新建分类按钮
    通用-web.长等待输入文本    xpath=//*[@id="cate-name"]    ${商品分类}
    通用-web.长等待点击元素    xpath=//*[@id="popup-addCate"]/div[2]/div[2]/div[2]/a[1]    #点击确认按钮
    Wait Until Keyword Succeeds    ${G_等待超时时间}    1s    Selenium2Library.Page Should Contain Element    xpath=//*[@value='${商品分类}']
    [Return]    ${商品分类}

删除商品分类
    [Arguments]    ${商品分类}
    ${row_table}    翻页查找分类    ${table_商品分类}    ${商品分类}    1    类型二
    ${row_tbody}    Evaluate    int(${row_table})-1
    通用-web.长等待点击元素    //*[@id="cate-table"]/tbody/tr[${row_tbody}]/td[2]/span[2]    #点击删除按钮
    通用-web.长等待点击元素    //*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    Wait Until Keyword Succeeds    ${G_等待超时时间}    1s    Selenium2Library.Page Should Not Contain Element    xpath=//*[@value='${商品分类}']

翻页查找分类
    [Arguments]    ${table_locator}    ${src_data}    ${src_column}    ${表格类型}=类型一
    log    按页查找，页码为j减一
    : FOR    ${j}    IN RANGE    2    11    #页数
    \    ${row}    分类-通过已知列数据获取行号    ${table_locator}    ${src_data}    ${src_column}    不验证
    \    ${data}    通用-web.长等待获取元素属性    xpath=//*[@value='${src_data}']    value
    \    ${status}    Run Keyword And Return Status    Should Contain    ${data}    ${src_data}
    \    Exit For Loop If    '${status}'=='True'
    \    选择页    ${table_locator}    ${j}    ${表格类型}
    ${data}    通用-web.长等待获取元素属性    xpath=//*[@value='${src_data}']    value
    ${status}    Run Keyword And Return Status    Should Contain    ${data}    ${src_data}
    Should Be Equal    '${status}'    'True'    前10页未找到数据
    ${row_table}    Set Variable    ${row}
    [Return]    ${row_table}

分类-通过已知列数据获取行号
    [Arguments]    ${table_locator}    ${src_data}    ${src_column}    ${is_verify}=
    log    获取表格行数，等待5s，循环10次，每次0.5秒
    : FOR    ${i}    IN RANGE    10
    \    ${max_row}    Selenium2Library.Get Matching Xpath Count    xpath=//table/tbody/tr
    \    Exit For Loop If    '${max_row}'!='0'
    \    sleep    0.5s
    Should Not Be Equal As Strings    ${max_row}    0    <表格10秒内未刷新出来>
    log    按行轮询表格
    : FOR    ${i}    IN RANGE    2    int(${max_row})+2
    \    ${cell_data}    通用-web.长等待获取元素属性    xpath=//*[@value='${src_data}']    value
    \    ${status}    Run Keyword And Return Status    Should Contain    ${cell_data}    ${src_data}
    \    Exit For Loop If    '${status}'=='True'
    Run Keyword If    '${is_verify}'==''    Should Be Equal As Strings    ${cell_data}    ${src_data}
    ${row_table}    Set Variable    ${i}
    [Return]    ${row_table}

编辑商品分类
    [Arguments]    ${商品分类}
    ${row_table}    翻页查找分类    ${table_商品分类}    ${商品分类}    1    类型二
    ${row_tbody}    Evaluate    int(${row_table})-1
    通用-web.长等待点击元素    //*[@id="cate-table"]/tbody/tr[${row_tbody}]/td[2]/span[1]    #点击编辑按钮
    ${random}    Generate Random String    4    [NUMBERS]
    ${编辑分类名称}    Set Variable    ${G_编辑分类前缀}${random}
    通用-web.长等待输入文本    xpath=//*[@id="cate-table"]/tbody/tr[${row_tbody}]/td[1]/input    ${编辑分类名称}    #编辑商品名称
    通用-web.长等待点击元素    xpath=//*[@id="cate-table"]/tbody/tr[${row_tbody}]/td[2]/span[1]    #点击完成
    Wait Until Keyword Succeeds    ${G_等待超时时间}    1s    Selenium2Library.Page Should Not Contain Element    xpath=//*[@value='${商品分类}']
    Wait Until Keyword Succeeds    ${G_等待超时时间}    1s    Selenium2Library.Page Should Contain \ Element    xpath=//*[@value='${编辑分类名称}']
    [Return]    ${编辑分类名称}

出售中批量删除商品
    [Arguments]    ${删除商品关键字}
    点击商品管理
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${删除商品关键字}    #输入商品名称
    通用-web.长等待点击按钮    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall_goods mg, mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(1) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${删除商品关键字}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/span[1]/div/ins    #点击选择当前页
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/a[2]    #点击批量删除
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    //*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    #未检验是否删除成功

仓库中批量删除商品
    [Arguments]    ${删除商品关键字}
    点击仓库中的商品
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${删除商品关键字}    #输入商品名称
    通用-web.长等待点击按钮    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall_goods mg, mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(2,3) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${删除商品关键字}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/span[1]/div/ins    #点击选择当前页
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/a[2]    #点击批量删除
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    //*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    #未检验是否删除成功

批量下架商品
    [Arguments]    ${商品名称}
    点击商品管理
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${商品名称}    #输入商品名称
    通用-web.长等待点击按钮    xpath=//*[@id="search-btn"]    #点击查询
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall.mall_goods mg, mall.mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(1) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${商品名称}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    通用-web.长等待点击按钮    xpath=//*[@id="search-btn"]    #点击查询
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/span[1]/div/ins    #点击选择当前页
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/a[1]    #点击批量下架
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    //*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    #判断商品从当前页面消失
    : FOR    ${k}    IN RANGE    20
    \    ${status}    Run Keyword And Return Status    Page Should Not Contain    ${商品名称}
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s

批量上架商品
    [Arguments]    ${商品名称}
    点击仓库中的商品
    通用-web.长等待输入文本    xpath=//*[@id="goodsName-search"]    ${商品名称}    #输入商品名称
    通用-web.长等待点击按钮    xpath=//*[@id="search-btn"]    #点击查询
    截图
    #判断当前商品与数据库一致
    ${商品数量}    数据库.查询sql    SELECT COUNT(mg.id) FROM mall.mall_goods mg, mall.mall_goods_cate mgc WHERE mg.cate_id = mgc.id AND mgc.`del_flag` = 0 AND mg.STATUS IN(2,3) AND mg.`shop_id` = 42 AND mg.`del_flag` = 0 AND mg.name LIKE '${商品名称}%' AND (mg.`cw_id`IS NOT NULL OR mg.`private_serial`IS NOT NULL)    #仓库中查询商品
    : FOR    ${k}    IN RANGE    20
    \    ${data}    Selenium2Library.Get Text    xpath=//*[@id="app"]/div[2]/div/span[2]/label/span
    \    ${status}    Run Keyword And Return Status    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    通用-web.长等待点击按钮    xpath=//*[@id="search-btn"]    #点击查询
    \    sleep    0.5s
    Should Be Equal    '${商品数量[0][0]}'    '${data}'
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/span[1]/div/ins    #点击选择当前页
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="app"]/div[2]/div/a[1]    #点击批量下架
    Run Keyword If    '${商品数量[0][0]}'=='${data}'    通用-web.长等待点击元素    xpath=//*[@id="warn-popup"]/div[2]/div[2]/div[3]/a[1]    #点击确认
    #判断商品从当前页面消失
    : FOR    ${k}    IN RANGE    20
    \    ${status}    Run Keyword And Return Status    Page Should Not Contain    ${商品名称}
    \    Exit For Loop If    '${status}'=='True'
    \    ${k}    Set Variable    ${k}+1
    \    sleep    0.5s

截图
    Selenium2Library.Capture Page Screenshot

获取总订单金额
    商户管理后台-主菜单.点击门店应用
    门店应用-微信商城-商品管理-UI.点击微信商城
    点击商城统计
    ${ordersMoney}    Selenium2Library.Get Text    //*[@id="ordersMoney"]
    ${sum}    数据库.商城-查询总订单金额    #默认近7天
    Should Be Equal    ${ordersMoney}    ${sum}

获取总订单数
    商户管理后台-主菜单.点击门店应用
    门店应用-微信商城-商品管理-UI.点击微信商城
    点击商城统计
    ${ordersAmount}    Selenium2Library.Get Text    //*[@id="ordersAmount"]
    ${count}    数据库.商城-查询总订单数    #默认近7天
    Should Be Equal    '${ordersAmount}'    '${count}'
